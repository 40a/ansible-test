#!/usr/bin/env python

import argparse
import os
import subprocess
import tempfile
import pkg_resources

from jinja2 import Template

DOCKER_CONTAINER = "testbox"
here = lambda path: os.path.join(os.path.dirname(__file__), path)

def _generate_dockerfile(context):
   '''Returns the file path to the rendered Dockerfile'''

   template = Template(pkg_resources.resource_string(__name__, "Dockerfile.j2"))
   rendered_dockerfile_contents = template.render(context)

   rendered_dockerfile_path = os.path.join(tempfile.tempdir, "Dockerfile")
   with open(rendered_dockerfile_path, "wb") as f:
      f.write(rendered_dockerfile_contents)

   return rendered_dockerfile_path

if __name__ == "__main__":
   parser = argparse.ArgumentParser()
   parser.add_argument("role", help="Role to test")
   parser.add_argument("--image", "-i", default="debian:7.7",
                       help="Docker Base Image")

   args = parser.parse_args()

   context = {
      'image': args.image
      'cwd': os.getcwd()
   }
   dockerfile_path = _generate_dockerfile(context)

   #Build Docker Container
   subprocess.check_call(
       ['docker', 'build',
        '-t', DOCKER_CONTAINER,
        os.path.dirname(dockerfile_path)]
   )

   #Run Test Suite
   subprocess.check_call(
       ['docker', 'run',
        '-e', 'DOCKER_TEST_ROLE=%s' % args.role,
        '--privileged=true',
        '-it', DOCKER_CONTAINER]
   )
